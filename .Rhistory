log(119/158)
log(181/528)
summary(glm(survived ~ factor(pclass), family = "binomial"))
question2 <- glm(survived ~ factor(pclass), family = "binomial")
exp(question2$coefficients)
#p-values are telling us that the intercept is not zero. It means that the beta one (β1) is different from zero. This means that there is a difference between women and survival. Since is negative it means that
#there is no R square because there is no use of residuals right now.
#binomial can be approximated by z-scores.
summary(glm(survived ~ factor(sex), family = "binomial"))
model3 <- glm(survived ~ factor(sex), family = "binomial")
exp(model3$coefficients)
#time7.13pm
#p-values are telling us that the intercept is not zero. It means that the beta one (β1) is different from zero. This means that there is a difference between women and survival. Since is negative it means that
#there is no R square because there is no use of residuals right now.
#binomial can be approximated by z-scores.
View(question2)
exp(question2$coefficients)
summary(glm(survived ~ factor(pclass), family = "binomial"))
question2 <- glm(survived ~ factor(pclass), family = "binomial")
exp(question2$coefficients)
(1.62)/(1 + 1.62)
(0.75)/(1 + 0.75)
(0.34)/(1 + 0.34)
161/682
summary(glm(survived ~ age, family = "binomial"))
model2 <- glm(survived ~ age * factor(sex), family = "binomial")
exp(model2$coefficients)
#binomial distribution indicates i.e. people either die or survive.
#In the last code line I exponentiate the coefficients
plot(survived ~ age)
abline(lm(survived~age), col = "red")
summary(lm(survived~age))
plot(survived ~ age)
abline(lm(survived~age), col = "red")
summary(lm(survived~age * factor(sex), family = "binomial", data=titanic))
plot(survived ~ age)
abline(lm(survived~age), col = "red")
summary(glm(survived~age * factor(sex), family = "binomial", data = titanic))
summary(glm(survived~pclass * factor(sex), family = "binomial", data = titanic))
summary(glm(survived~pclass * factor(sex), family = "binomial", data = titanic))
5.4904 -5.7927 *1 + 1.3312 *1
exp(1.0289)
5.4904 -1.8340 -5.7927 *1 + 1.3312 *1
exp(-0.8051)
2.797986/(1+2.797986)
0.4470432/(1+0.4470432)
5.4904 + 1.3312 *1
exp(6.8216)
917.4518/(1+917.4518)
summary(glm(survived~factor(pclass) * factor(sex), family = "binomial", data = titanic))
-3.325 - 3.9848 + 2.3039
exp(-5.0059)
0.00669831/(1+0.00669831)
3.325 - 3.9848 + 2.3039
exp(1.6441)
5.176349/(1+5.176349)
3.325 -1.2666 +0.1617
exp(2.2201)
9.208252/(1+9.208252)
3.325 -1.2666 - 3.9848+0.1617
exp(-1.7647)
0.1712382/(1+0.1712382)
3.325 - 3.9848
exp(-0.6598)
0.5169547/(1+0.5169547)
3.325 - 3.9848 +2.3039
exp(1.6441)
5.176349/(1+5.176349)
3.325 -3.3621 - 3.9848 +2.3039
exp(-1.718)
0.1794246/(1+0.1794246)
exp(3.325)
27.799/(1+27.799)
3.325 -1.2666
exp(2.0584)
7.833426/(1+7.833426)
3.325 -3.3621
exp(-0.0371)
0.9635798/(1+0.9635798)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gapminder)
library(MASS)
library(lmtest)
library(sandwich)
library(lme4)
gapminder %>%  filter(year == 2007) -> gapminder07
summary(lm(lifeExp ~ gdpPercap, data = gapminder07))
gapminder07 %>%ggplot(aes(x = gdpPercap, y = lifeExp)) + geom_point() +
geom_smooth(method = "lm")
lm(lifeExp ~ gdpPercap, data = gapminder07) -> model1
plot(model1)
lm(lifeExp ~ log(gdpPercap), data = gapminder07) -> model2
plot(model2)
gapminder07 %>%ggplot(aes(x = gdpPercap, y = lifeExp)) + geom_point() + scale_x_log10() +
geom_smooth(method = "lm")
boxcox(lifeExp ~ log(gdpPercap), data = gapminder07, lambda = seq(-5, 5, 1/10))
boxcox(lifeExp ~ log(gdpPercap), data = gapminder07, lambda = seq(-5, 5, 1/10)) -> bxdata
bxdata$x[which.max(bxdata$y)]
gapminder07 %>%  mutate(lifeExpbx = (lifeExp^4.3 - 1)/4.3) -> gapminder07_2
lm(lifeExpbx ~ log(gdpPercap), data = gapminder07_2) -> model3
plot(model3)
gapminder07_2 %>%ggplot(aes(x = gdpPercap, y = lifeExpbx)) + geom_point() + scale_x_log10() +
geom_smooth(method = "lm")
summary(model2)
coeftest(model2)
coeftest(model2, vcov = vcovHC, type = "HC1")
coeftest(model2, vcov = vcovHC, type = "HC5")
A <- c(21, 18, 24, 20)
N <- c(19, 7, 11, 13)
wilcox.test(A,N)
wilcox.test(A,N, conf.int = T)
diff <- c(0.37, -0.23, 0.66, -0.08, -0.17)
wilcox.test(diff)
wilcox.test(diff, conf.int = T)
t.test(A, N)
boxplot(Ozone ~ Month, data = airquality)
kruskal.test(Ozone ~ Month, data = airquality)
350/30
rm(model1, model2, model3, gapminder07, gapminder07_2, bxdata, question2, titanic)
rm(A, diff, N)
install.packages('fastDummies')
install.packages("norm")
install.packages("DataExplorer")
library(tidyverse)
library(dplyr)
library(readxl)
library(descr)
library(infer)
library(fastDummies)
library(norm)
library(DataExplorer)
library(MASS)
library(lmtest)
library(sandwich)
library(lme4)
library(haven)
gss2021 <- read_dta("~/Desktop/522 R sessions-directory/gss2021.dta")
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
install.packages('fastDummies')
install.packages("norm")
install.packages("DataExplorer")
library(tidyverse)
library(dplyr)
library(readxl)
library(descr)
library(infer)
library(fastDummies)
library(norm)
library(DataExplorer)
library(MASS)
library(lmtest)
library(sandwich)
library(lme4)
library(haven)
gss2021 <- read_dta("~/Desktop/522 R sessions-directory/gss2021.dta")
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
gssfit <-gss2021 %>%
select(agekdbrn)
view(gss2021)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>%
select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
install.packages('fastDummies')
install.packages("norm")
install.packages("DataExplorer")
library(tidyverse)
library(dplyr)
library(readxl)
library(descr)
library(infer)
library(fastDummies)
library(norm)
library(DataExplorer)
library(MASS)
library(lmtest)
library(sandwich)
library(lme4)
install.packages("DataExplorer")
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>%
select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
rm(gss1st)
install.packages('fastDummies')
install.packages("norm")
install.packages("DataExplorer")
library(tidyverse)
library(dplyr)
library(readxl)
library(descr)
library(infer)
library(fastDummies)
library(norm)
library(DataExplorer)
library(MASS)
library(lmtest)
library(sandwich)
library(lme4)
library(haven)
gss2021 <- read_dta("~/Desktop/522 R sessions-directory/gss2021.dta")
view(gss2021)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>%
select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
library(tidyverse)
library(dplyr)
library(readxl)
library(descr)
library(infer)
library(fastDummies)
library(norm)
library(DataExplorer)
library(MASS)
library(lmtest)
library(sandwich)
library(lme4)
library(haven)
gss2021 <- read_dta("~/Desktop/522 R sessions-directory/gss2021.dta")
view(gss2021)
gss1st <- gss2021 %>%
select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
gss1st <- gss2021 %>%
select(id, age, sex, agekdbrn, happy, marital, health, life)
> sink('out.txt')
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu)
install.packages("norm")
install.packages("DataExplorer")
library(tidyverse)
library(dplyr)
library(readxl)
library(descr)
library(infer)
library(norm)
library(DataExplorer)
library(lmtest)
library(sandwich)
library(lme4)
library(haven)
gss2021 <- read_dta("~/Desktop/522 R sessions-directory/gss2021.dta")
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu, satfin, realinc, sexfreq, condom, evcrack)
gssfit <-gss2021 %>%
select(agekdbrn)
#We replace the variable NA with zero, and the age of person when had the first child with
gssfit[is.na(gssfit$agekdbrn),] = 0
gssfit[gssfit$agekdbrn %in% c('9':'57'), ] = 1
#I mutate to plug in the new column with the people that had children vs the people who did not
gssr <- gss1st %>% mutate(kid = gssfit$agekdbrn)
#We run a linear regression among happiness as a dependent variable Y, and children having people with independent variable X.
model <- lm(happy~ kid, data= gssr)
summary(model)
ggplot(gssr, aes(x=kid))+geom_bar()
ggplot(gssr, aes(x=satfin))+geom_bar()
ggplot(gssr, aes(x=kid+satfin))+geom_bar()
ggplot(gssr, aes(x=satfin, fill= kid)) +
theme_bw()+
geom_bar()+
labs(y= "sample size",
title = "kid havers with satisfaction status")
gssr2 <- gssr %>%  filter(happy!=2)
#if i continue with this one I should run a logistic regression
# very happy, pretty happy, or not too happy
#784 to 3091
#will using the interaction between the two help me
bptest(model)
coeftest(model)
coeftest(model, vcov = vcovHC, type = "HC1")
coeftest(model, vcov = vcovHC, type = "HC5")
model1 <- lm(happy~ kid + satfin + kid*satfin, data= gssr)
summary(model1)
model2 <- lm(happy~ satfin, data= gssr)
summary(model2)
model2 <- lm(happy~ satfin, data= gssr)
summary(model2)
model2 <- lm(happy~ satfin, data= gssr)
summary(model2)
model1 <- lm(happy~ kid + satfin + kid*satfin, data= gssr)
summary(model1)
boxplot(gssr$kid,
ylab = "kid")
boxplot(gssr$happy,
ylab = "kid")
qplot(data = gssr, x= kid, y= happy, geom = "boxplot")
boxplot(happy)
boxplot(happy)
halp(boxplot)
help(boxplot)
boxplot(gssr)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu, satfin, realinc, condom, evcrack)
boxplot(gssr)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu, satfin, realinc, condom, evcrack)
gssfit <-gss2021 %>%
select(agekdbrn)
#We replace the variable NA with zero, and the age of person when had the first child with
gssfit[is.na(gssfit$agekdbrn),] = 0
gssfit[gssfit$agekdbrn %in% c('9':'57'), ] = 1
#I mutate to plug in the new column with the people that had children vs the people who did not
gssr <- gss1st %>% mutate(kid = gssfit$agekdbrn)
#We run a linear regression among happiness as a dependent variable Y, and children having people with independent variable X.
model <- lm(happy~ kid, data= gssr)
summary(model)
ggplot(gssr, aes(x=kid))+geom_bar()
ggplot(gssr, aes(x=satfin))+geom_bar()
ggplot(gssr, aes(x=kid+satfin))+geom_bar()
ggplot(gssr, aes(x=satfin, fill= kid)) +
theme_bw()+
geom_bar()+
labs(y= "sample size",
title = "kid havers with satisfaction status")
gssr2 <- gssr %>%  filter(happy!=2)
#if i continue with this one I should run a logistic regression
# very happy, pretty happy, or not too happy
#784 to 3091
#will using the interaction between the two help me
bptest(model)
coeftest(model)
coeftest(model, vcov = vcovHC, type = "HC1")
coeftest(model, vcov = vcovHC, type = "HC5")
model1 <- lm(happy~ kid + satfin + kid*satfin, data= gssr)
summary(model1)
model2 <- lm(happy~ satfin, data= gssr)
summary(model2)
boxplot(gssr)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu, satfin, realinc, evcrack)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu, satfin, realinc, evcrack)
gssfit <-gss2021 %>%
select(agekdbrn)
#We replace the variable NA with zero, and the age of person when had the first child with
gssfit[is.na(gssfit$agekdbrn),] = 0
gssfit[gssfit$agekdbrn %in% c('9':'57'), ] = 1
#I mutate to plug in the new column with the people that had children vs the people who did not
gssr <- gss1st %>% mutate(kid = gssfit$agekdbrn)
#We run a linear regression among happiness as a dependent variable Y, and children having people with independent variable X.
model <- lm(happy~ kid, data= gssr)
summary(model)
ggplot(gssr, aes(x=kid))+geom_bar()
ggplot(gssr, aes(x=satfin))+geom_bar()
ggplot(gssr, aes(x=kid+satfin))+geom_bar()
ggplot(gssr, aes(x=satfin, fill= kid)) +
theme_bw()+
geom_bar()+
labs(y= "sample size",
title = "kid havers with satisfaction status")
gssr2 <- gssr %>%  filter(happy!=2)
#if i continue with this one I should run a logistic regression
# very happy, pretty happy, or not too happy
#784 to 3091
#will using the interaction between the two help me
bptest(model)
coeftest(model)
coeftest(model, vcov = vcovHC, type = "HC1")
coeftest(model, vcov = vcovHC, type = "HC5")
model1 <- lm(happy~ kid + satfin + kid*satfin, data= gssr)
summary(model1)
model2 <- lm(happy~ satfin, data= gssr)
summary(model2)
boxplot(gssr)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu, satfin, realinc)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu, satfin, realinc)
gssfit <-gss2021 %>%
select(agekdbrn)
#We replace the variable NA with zero, and the age of person when had the first child with
gssfit[is.na(gssfit$agekdbrn),] = 0
gssfit[gssfit$agekdbrn %in% c('9':'57'), ] = 1
#I mutate to plug in the new column with the people that had children vs the people who did not
gssr <- gss1st %>% mutate(kid = gssfit$agekdbrn)
#We run a linear regression among happiness as a dependent variable Y, and children having people with independent variable X.
model <- lm(happy~ kid, data= gssr)
summary(model)
ggplot(gssr, aes(x=kid))+geom_bar()
ggplot(gssr, aes(x=satfin))+geom_bar()
ggplot(gssr, aes(x=kid+satfin))+geom_bar()
ggplot(gssr, aes(x=satfin, fill= kid)) +
theme_bw()+
geom_bar()+
labs(y= "sample size",
title = "kid havers with satisfaction status")
gssr2 <- gssr %>%  filter(happy!=2)
#if i continue with this one I should run a logistic regression
# very happy, pretty happy, or not too happy
#784 to 3091
#will using the interaction between the two help me
bptest(model)
coeftest(model)
coeftest(model, vcov = vcovHC, type = "HC1")
coeftest(model, vcov = vcovHC, type = "HC5")
model1 <- lm(happy~ kid + satfin + kid*satfin, data= gssr)
summary(model1)
model2 <- lm(happy~ satfin, data= gssr)
summary(model2)
boxplot(gssr)
gssrhi <- gssr %>% select(kid, happy, satfin)
boxplot(gssrhi)
boxplot(gssrhi)
quantile(gssrhi, probs=c(0, 0.25, 0.5, 0.75, 1))
ggplot(gssrhi, aes(x=kid, y=happy)) +  geom_boxplot(fill='green')
mosaicplot(gssrhi, xlab='Match Result', ylab='Team',main='Wins by Team', col='orange')
> library(vcd)
library(vcd)
install.packages("vcd")
library(vcd)
gssrhi(happy)
install.packages("vcd")
library(vcd)
gssrhi(kid)
library(vcd)
gssrhi(kid)
library(vcd)
gssrhi(kid)
library(vcd)
mosaic(kid, shade = TRUE)
library(vcd)
mosaic(gssrhi$kid, shade = TRUE)
gssrhi(kid)
model4 <- lm(hrs1~ marital+sex, data= gss2021)
model4 <- lm(hrs2 ~ marital+sex, data= gss2021)
(45.9767+4.6913)-(45.9767-3.71)
45.9767 + 9.05
60-55.0267
model3 <- lm(satjob~ marital, data= gss2021)
model3 <- lm(satjob~ marital, data= gss2021)
#We create a dataset with values that might be used for this project analysis. Sex (sex), age when first kid was born (agekdbrn), and happiness (happy), are the most essential variables for the purposes of this project.
gss1st <- gss2021 %>% select(id, age, sex, agekdbrn, happy, marital, health, life, chldidel, xmarsex, spanking, relpersn, quallife, satsoc, hlthphys, endsmeet, evidu, satfin, realinc)
gssfit <-gss2021 %>%
select(agekdbrn)
model3 <- lm(satjob~ marital, data= gss2021)
model3 <- lm(satjob~ marital, data= gss2021)
gssfat <- gss2021 %>% select(id, satjob, marital, sex)
model3 <- lm(marital~ satjob, data= gssfat)
View(gssfat)
(-1.49221)/0.1419
1.78-0.25+0.17*3+0.06*1*3
1.78+0.17*3
gssfat <- gss2021 %>% select(id, satjob, marital, sex)
gssrhi <- gssr %>% select(kid, happy, satfin)
gssfat <- gss2021 %>% select(id, satjob, marital, sex)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gapminder)
library(MASS)
library(lmtest)
library(sandwich)
library(lme4)
gapminder %>%  filter(year == 2007) -> gapminder07
summary(lm(lifeExp ~ gdpPercap, data = gapminder07))
gapminder07 %>%ggplot(aes(x = gdpPercap, y = lifeExp)) + geom_point() +
geom_smooth(method = "lm")
lm(lifeExp ~ gdpPercap, data = gapminder07) -> model1
plot(model1)
gapminder07 %>%ggplot(aes(x = gdpPercap, y = lifeExp)) + geom_point() + scale_x_log10() +
geom_smooth(method = "lm")
lm(lifeExp ~ log(gdpPercap), data = gapminder07) -> model2
plot(model2)
boxcox(lifeExp ~ log(gdpPercap), data = gapminder07, lambda = seq(-5, 5, 1/10))
boxcox(lifeExp ~ log(gdpPercap), data = gapminder07, lambda = seq(-5, 5, 1/10)) -> bxdata
bxdata$x[which.max(bxdata$y)]
gapminder07 %>%  mutate(lifeExpbx = (lifeExp^4.3 - 1)/4.3) -> gapminder07_2
lm(lifeExpbx ~ log(gdpPercap), data = gapminder07_2) -> model3
plot(model3)
gapminder07_2 %>%ggplot(aes(x = gdpPercap, y = lifeExpbx)) + geom_point() + scale_x_log10() +
geom_smooth(method = "lm")
install.packages("quarto")
quarto_render()
library(quarto)
quarto_render()
setwd("~/Desktop/github/LoizosKo")
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
quarto_render()
