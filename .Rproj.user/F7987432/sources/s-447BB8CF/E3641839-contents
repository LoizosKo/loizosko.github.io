---
title: "R Notebook"
output: html_notebook
---

Transform this recipe into pseudo-code that imitates R syntax. To do that:

1.  Identify the objects, the features of these objects, and the values these features take. How many objects are there in the recipe?

        Example: a saucepan is an object of a class "pan". Its feature can be depth and its value can be "deep".

    ```{r}
    #objects //// variables also known as features [categ, numer (cont/discr), ordinal]
    #redonion = vegetable, feature-sourness value-sour
    #persimmon = fruit, feature-sweetness value-sweet
    #fontina cheese = dary, feature-milky value-milk
    #vinegar=dressing, feature-sourness value-sour
    #ranch dressing = dressing, feature-flavory value-flavor
    #pullman bread= baked, feature-floury value-flour
    #watermelon radish=fruit, feature-sweetness value-sweet
    #almonds=nuts, feature-crunchy value-crunch

    ```

2.  Identify and list the functions and the methods used in the recipe. How many of those are there in the recipe?

        Example: Roasting is a method that can be applied to objects of the type "meat" and "vegetables". So you can roast chicken by applying the method roast to the object chicken: chicken.roast() will result in roasted chicken. "roasted_chicken = chicken.roast()". Alternatively, you can think of roasting as a function that takes a value chicken$status and change it from "raw" to "roasted". "chicken = chicken %>% roast(status)".

3.  Write out the pipes that outline the steps of the recipe.

What is the minimum number separate pipes that you need to create to cook the dish and serve it?

Example of a pipe for "Take a piece of chicken, cover it in breadcrumbs, fry it in a pan, and let cool": "chicken.crumbs().fry(temperature = 375, time = 15).cool()" or "chicken = chicken %\>% crumbs(outside) %\>% fry(cooktype, temperature = 375, time = 15) %\>% cool(temperature)". The specifics of the pipes can differ greatly between submissions as we are working with imaginary objects that you can conceptualize very differently. What I care about is you being able to transform the steps of the recipe into pseudo-code instructions that look like computer code.

install packages

```{r}
ksjkf
```
