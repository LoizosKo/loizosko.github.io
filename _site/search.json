[
  {
    "objectID": "posts/2022-06-09-denmark/index.html#currency",
    "href": "posts/2022-06-09-denmark/index.html#currency",
    "title": "Things to do in Copenhagen",
    "section": "CURRENCY",
    "text": "CURRENCY\nThe main currency is Danish Krone. Live currency converter. However, they accept card payments everywhere. With Revolut or Venmo you should be fine."
  },
  {
    "objectID": "posts/2022-06-09-denmark/index.html#transportation",
    "href": "posts/2022-06-09-denmark/index.html#transportation",
    "title": "Things to do in Copenhagen",
    "section": "TRANSPORTATION",
    "text": "TRANSPORTATION\n\nThe Metro is convenient and it takes you everywhere you want to go within the city:\n\nRejseplanen app - This is the app for the metro/train. It is designed specifically for them and it works like Google maps. Great navigation tool while you are in Denmark. There will be machines (also a person for support) at the airport where you can buy tickets. Also, Denmark is infamous for cycling with great infrastructure. You can rent bikes as well and ride across the city."
  },
  {
    "objectID": "posts/2022-06-09-denmark/index.html#cool-visits",
    "href": "posts/2022-06-09-denmark/index.html#cool-visits",
    "title": "Things to do in Copenhagen",
    "section": "COOL VISITS",
    "text": "COOL VISITS\nNyhavn (The most iconic part of Copenhagen. Highly recommended. the Closest metro station: Kongens Nytorv station.)\n\n\n\nNyhavn\n\n\n\nSomething you can do is to walk through the shopping center of Copenhagen. You can go to Norreport station and walk towards Nyhavn. It is like a 1 to 1.5 mile (1.6–2.4km) walk. There are many stores and restaurants in between (along the yellow line on the map). While it is not a straightforward walk it is a pleasant one as you are passing through the shopping area of the city.\n\n\nRosenborg Castle & Botanical Garden (Nice places to walk around. Also, Rosenborg castle is a historic place that now operates as a museum ticket info. Have no opinion for the museum though as I haven’t been. Closest metro station: Norreport station)\nLittle Mermaid (You will often see it in souvenir shops as it is considered as one of the main attraction points in Copenhagen along Nyhavn. While you might not be impressed by it due to its tiny size, you may want to see it simply for its touristic outreach.) Osterport Station.\nAmalienborg (The equivalent ‘Buckingham palace’ of Denmark. Cool for walking around and taking pictures with the royal guards. Have no opinion for the museum there though as I haven’t been. tick info)\nCarlsberg Factory (if you like beer this is a nice place to visit. There is a tour in the factory and some beer tasting in the end. Carlsberg Station.)\nTivoli Gardens/Park (Located in front of the Central Station. The most famous park in Copenhagen. Kobenhavn H station)\nFisketorvet (If you like Malls, this can be an option. Most famous mall in the city.)\nBlack Diamond (The largest library in Denmark. It is a modern building. A Nice place to visit. Christianshavn station.)"
  },
  {
    "objectID": "posts/2022-06-09-denmark/index.html#cool-neighbourhoods",
    "href": "posts/2022-06-09-denmark/index.html#cool-neighbourhoods",
    "title": "Things to do in Copenhagen",
    "section": "COOL NEIGHBOURHOODS",
    "text": "COOL NEIGHBOURHOODS\n\nFreetown Christiania (It is considered an independent town within Copenhagen where people go there to chillax. It is a renowned marijuana place since Christiania is the only part of Copenhagen where Danish law is not enforced. However, it is a safe area that is worth a visit mainly due to its particularity. Highly recommended.) Metro station: Christianshavn.\nBeautiful Parks (especially for summer walks):\n\n\nFrederiksberg Have (One of the most beautiful parks in Copenhagen) Frederiksberg station.\nSuperkilen Park (Norrebro station). Fun fact, Norrebro is an area where many immigrants stay. Diverse area.\nVestre Kirkegard (near Carlsberg factory) Metro: Carlsberg Station\n\nFOOD & COOL PLACES (min $ /max $$$$)\n\nUnion Kitchen $$ (Cool place for brunch. Heard great things from friends that have been there.)\nSticks’n’Sushi $$$ (Great sushi place. Known rooftop restaurant in the city.)\nDalle Valle $ (variety food buffet - alue for money place with plenty of food) Not fast food, but not a high-class restaurant. Almost always lots of people, decent food, a variety of options. Recommended for lunch.\nConditori La Glace $$$ (Traditional Danish pastries, it is the oldest patisserie in Denmark - founded in 1870, good for dessert)\nEspresso House $$ (coffee place, despite its Swedish origin it is considered as the ‘Starbucks’ of Denmark)\nBastard cafe $$ (a place full of board games. A nice place to go with friends for coffee/snacks/beer and board games.\nTaphouse $$ (Famous bar in the city. If you like beer then this is the place for you. It has one of the largest beer selections in Europe.)\n\nYou can always map your choices and combine visits that are close to each other. Also, since it is Scandinavia, remember to check the weather while preparing your bags! You are visiting arguably the most beautiful city in Scandinavia so try to enjoy every minute of it!\nHave fun and safe travels!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Loizos Konstantinou",
    "section": "",
    "text": "This is my personal website. Here you can find information about me.\nI am currently pursuing a Master of Behavioral and Decision Sciences from the University of Pennsylvania, graduating in December 2022. Through my graduate coursework I am doing concentration in data science.\nAt UPenn, I took a challenging coursework including ‘Statistical Reasoning for Behavioral Science’, ‘Data Science and Quantitative Modeling’, ‘Judgments and Decisions’, ‘Public policy and Public Finance’. I am also elected as a student representative for GAPSA (Graduate and Professional Student Assembly) where I organize activities that enhance the ties among the school’s graduate community. Moreover, I have gained invaluable experience working as a project analyst for DiagnosePoint start-up (launches an at-home PCR testing product targeting businesses), where I conducted market research on their behalf. I have conducted desk research and interviewed companies to gather information, where I identified and presented areas for potential improvement.\nDuring spring semester 2022, I am taking ‘Data Science and Quantitative modelling’, ‘Behavioral Public Policy’, and ‘Norms and Nudges’. In addition, I am doing my capstone project where I will be working in a team setting for a company to solve business questions/problems. It will be an 9-week process from February until May.\nDuring my bachelor degree, I have gained multifaceted exposure to different sectors. I have worked in tourist industry, financial industry, and academia. I volunteered at Erasmus Student Network Nicosia where I organized trips, game nights, and activities in Cyprus for international students. There I was elected as the National Exchangeability Coordinator for Cyprus (year 2018-2019) where I was responsible for ensuring that all the events/activities that are happening from ESN, were inclusive. Alongside, in collaboration with the Social Inclusion Coordinator, we have organized 2-week social inclusion days where we visited special schools, organized sign-language workshops, movie nights, and participated at Red-Cross blood donation events and HIV campaigns in Cyprus.\nI have also actively participated in policy-making processes. I was a member of Youth Parliament of Cyprus for three years where we managed to pass bills that digitalize Cyprus education and actively advocate for them to the decision making centers. Moreover, as a member of UNYSA Cyprus (United Nation Youth Student Association) , I represented my country at Harvard Model United Nations. Furthermore, I raised $700 and helped the board to organize a 5-week internship for Public Policy making for two Cypriots in the US Congress and the American Hellenic institute in Washington DC."
  },
  {
    "objectID": "software/index.html",
    "href": "software/index.html",
    "title": "Loizos Konstantinou",
    "section": "",
    "text": "Some things I made\n\nRStudio projects\n\n  \n    \n      \n    \n    \n    \n        \n      \n      Google Trends\n      Top 3 American Sitcoms\n   \n  \n\nPython projects\n\n  \n    \n      \n    \n    \n    \n        \n      \n      \n      \n   \n  \n\n\nNo matching items"
  },
  {
    "objectID": "software/sitcoms.html",
    "href": "software/sitcoms.html",
    "title": "Sitcoms",
    "section": "",
    "text": "Let's continue working with the Google Trends data you obtained for Homework 02. Homework 3 starts from the line 180 and onward.\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n✓ tibble  3.1.6     ✓ dplyr   1.0.7\n✓ tidyr   1.1.4     ✓ stringr 1.4.0\n✓ readr   2.0.1     ✓ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(readr)\nlibrary(readxl)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(broom)\nlibrary(ggthemes)\nlibrary(ggsci)\n\n\nCode to load the data into R and prepare it for the analysis. You need to correctly specify data types and choose concise variable names.\n\n#Import data for the US\nuscoms <- read_csv(\"uscoms.csv\", skip = 1)\n\nRows: 217 Columns: 4\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Month\ndbl (3): Family Guy: (United States), South Park: (United States), The Simps...\n\n\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#Import data for the world\nworldcoms <- read_csv(\"worldcoms.csv\", skip = 1)\n\nRows: 217 Columns: 4\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Month\ndbl (3): Family Guy: (Worldwide), South Park: (Worldwide), The Simpsons: (Wo...\n\n\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#Import data for Cyprus\ncycoms <- read_csv(\"cycoms.csv\", skip = 1)\n\nRows: 217 Columns: 4\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Month\ndbl (3): Family Guy: (Cyprus), South Park: (Cyprus), The Simpsons: (Cyprus)\n\n\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nprepare the data for analysis\n\n#NOW WE CLEAN AND PREPARE THE DATA FOR ANALYSIS\n#Clean for the US.\nuscoms_clean <- uscoms %>%\n  rename(month = Month,\n         famguy = `Family Guy: (United States)`,\n         southpark = `South Park: (United States)`,\n         simpsons = `The Simpsons: (United States)`) %>% \n  mutate_if(is.character, str_replace, pattern = \"<\", replacement = \"\") %>% \n  mutate_at(c(\"famguy\", \"southpark\", \"simpsons\"), as.numeric) %>% \n  separate(month, into = c(\"year\", \"month\"), sep = \"-\", convert = TRUE) %>%\n  mutate(day = 15, .after = month) %>%\n  mutate(date = ymd(paste(year, month, day, sep=\"-\")))\n\n#Clean for Worldwide\nworldcoms_clean <- worldcoms %>%\n  rename(month = Month,\n         famguy = `Family Guy: (Worldwide)`,\n         southpark = `South Park: (Worldwide)`,\n         simpsons = `The Simpsons: (Worldwide)`) %>% \n  mutate_if(is.character, str_replace, pattern = \"<\", replacement = \"\") %>% \n  mutate_at(c(\"famguy\", \"southpark\", \"simpsons\"), as.numeric) %>% \n  separate(month, into = c(\"year\", \"month\"), sep = \"-\", convert = TRUE) %>%\n  mutate(day = 15, .after = month) %>%\n  mutate(date = ymd(paste(year, month, day, sep=\"-\")))\n\n#Clean for Cyprus.\ncycoms_clean <- cycoms %>%\n  rename(month = Month,\n         famguy = `Family Guy: (Cyprus)`,\n         southpark = `South Park: (Cyprus)`,\n         simpsons = `The Simpsons: (Cyprus)`) %>% \n  mutate_if(is.character, str_replace, pattern = \"<\", replacement = \"\") %>% \n  mutate_at(c(\"famguy\", \"southpark\", \"simpsons\"), as.numeric) %>% \n\n  #I separate the month and  year into two columns. Then I convert the character column to a number.\n  separate(month, into = c(\"year\", \"month\"), sep = \"-\", convert = TRUE) %>%\n\n  #I create a new column that is called day, and I use 15 as it is the middle of the month.\n  mutate(day = 15, .after = month) %>%\n\n  #Here I create a date column using the ymd (=year month day)function.\n  mutate(date = ymd(paste(year, month, day, sep=\"-\")))\n\nCode that will calculate the average popularity of the terms by year for each of the search terms in each of the geographies.\n\n#HERE WE SUMMARIZE THE AVERAGE POPULARITY OF THE TERMS BY YEAR OF EACH SEARCH\n#Summarize for the US\nuscoms_summary <- uscoms_clean %>% \n  group_by(year) %>% \n  summarize_at(c(\"famguy\", \"southpark\", \"simpsons\"), mean)\n\n#Summarize for Worldwide\nworldcoms_summary <- worldcoms_clean %>% \n  group_by(year) %>% \n  summarize_at(c(\"famguy\", \"southpark\", \"simpsons\"), mean)\n\n#Summarize for Cyprus\ncycoms_summary <- cycoms_clean %>% \n  group_by(year) %>% \n  summarize_at(c(\"famguy\", \"southpark\", \"simpsons\"), mean)\n\n\nBefore we analyse the data, we tidy them. This way, we have three rows that correspond for each month from 2004 until 2021. This makes easier for us to specify what goes where.\n\nuscoms_tidy <- uscoms_clean %>%\n  pivot_longer(cols = c(\"famguy\", \"southpark\", \"simpsons\"),\n               names_to = \"name\",\n               values_to = \"score\")\n\nworldcoms_tidy <- worldcoms_clean %>%\n  pivot_longer(cols = c(\"famguy\", \"southpark\", \"simpsons\"),\n               names_to = \"name\",\n               values_to = \"score\")\n\ncycoms_tidy <- cycoms_clean %>%\n  pivot_longer(cols = c(\"famguy\", \"southpark\", \"simpsons\"),\n               names_to = \"name\",\n               values_to = \"score\")\n\n4. Analyze the data to answer the following questions:\n\nIn what year was each term most popular? In which geography is each of the terms most popular in the year you found in Part A?\n\nuscoms_tidy %>% \n  ggplot(aes(x = date, y = score, color = name)) +\n  geom_line() + scale_x_date(date_breaks = \"2 year\", date_labels = \"%Y\")\n\n\n\n\n\nworldcoms_tidy %>% \n  ggplot(aes(x = date, y = score, color = name)) +\n  geom_line()+ scale_x_date(date_breaks = \"2 year\", date_labels = \"%Y\")\n\n\n\n\n\ncycoms_tidy %>% \n  ggplot(aes(x = date, y = score, color = name)) +\n  geom_line() + scale_x_date(date_breaks = \"2 year\", date_labels = \"%Y\")\n\n\n\n\nBased on the graphs the most popular year for\n–Family guy was: 2nd half of 2008 (USA)/ 1st half of 2009(Worldwide)/ 1st, 2nd half of 2007 (Cyprus)\n–Simpsons was: mid-2007 (USA,Worldwide)/ 2nd half of 2008 (Cyprus)\n–South Park was: 1st half of 2010 (USA, Worldwide) / first half of 2004 (Cyprus)\nCalculate the ratio of the most popular term to the least popular term. Describe how this ratio changed over time in each of the geographies by relying on yearly data.\n\n\n#I hereby summarize in three different ways the mean search score of each series.\nworldcoms_clean %>% summarize(mean(southpark), mean(simpsons), mean(famguy))\n\n# A tibble: 1 × 3\n  `mean(southpark)` `mean(simpsons)` `mean(famguy)`\n              <dbl>            <dbl>          <dbl>\n1              22.2             36.2           20.3\n\nworldcoms_clean %>% summarize_at(vars(southpark, simpsons, famguy), mean)\n\n# A tibble: 1 × 3\n  southpark simpsons famguy\n      <dbl>    <dbl>  <dbl>\n1      22.2     36.2   20.3\n\nsummary(worldcoms_clean)\n\n      year          month             day         famguy        southpark    \n Min.   :2004   Min.   : 1.000   Min.   :15   Min.   : 5.00   Min.   : 7.00  \n 1st Qu.:2008   1st Qu.: 3.000   1st Qu.:15   1st Qu.:12.00   1st Qu.:11.00  \n Median :2013   Median : 6.000   Median :15   Median :19.00   Median :21.00  \n Mean   :2013   Mean   : 6.475   Mean   :15   Mean   :20.29   Mean   :22.22  \n 3rd Qu.:2017   3rd Qu.: 9.000   3rd Qu.:15   3rd Qu.:29.00   3rd Qu.:29.00  \n Max.   :2022   Max.   :12.000   Max.   :15   Max.   :45.00   Max.   :69.00  \n    simpsons           date           \n Min.   : 13.00   Min.   :2004-01-15  \n 1st Qu.: 23.00   1st Qu.:2008-07-15  \n Median : 37.00   Median :2013-01-15  \n Mean   : 36.18   Mean   :2013-01-13  \n 3rd Qu.: 47.00   3rd Qu.:2017-07-15  \n Max.   :100.00   Max.   :2022-01-15  \n\n#Looking at the results we conclude that the simpsons on average was the most popular by far with 36.18 score. Then southpark follows with 22.22 and then family guy follows with 20.29.\n\nThen we group the averages by year so we can compare the yearly differences.\n\nworld_summary <- worldcoms_clean %>% \n  group_by(year) %>% \n  summarize_at(c(\"famguy\", \"southpark\", \"simpsons\"), mean)\n\nworld_tidy <- world_summary %>%\n  pivot_longer(cols = c(\"famguy\", \"southpark\", \"simpsons\"),\n               names_to = \"name\",\n               values_to = \"score\")\n\nworld_tidy %>% \n  ggplot(aes(x = year, y = score, color = name)) +\n  geom_line() \n\n\n\n\n\nHOMEWORK 3 STARTS HERE\n\nPrepare the graph showing the trends in popularity of the search terms over time. Make sure to add a descriptive title, label the axes, and modify the look of the graph to be presentable. You can choose your own colors or use one of the palettes we talked about in class. Add a one-sentence explanation for the geometry you selected for the graph.\n\nworld_tidy %>% \n  ggplot(aes(x = year, y = score, color = name)) +\n  geom_line() +\n  labs(x = \"Year\",\n       y = \"Popularity\",\n       title = \"World Popularity of the main American cartoon sitcoms - Google Trends data\") +\n  scale_color_discrete(labels = c(\"Family Guy\", \"The Simpsons\", \"South Park\")) #rename titles\n\n\n\n\nThe same code as before is used to make the graph. The only change here is that we rename the names of the shows in the graph by using the command “scale_color_discrete(labels = c(…)”.\n\n\nworld_tidy %>% \n  ggplot(aes(x = year, y = score, color = name)) +\n  geom_line() +\n  labs(x = \"Year\",\n       y = \"Popularity\",\n       title = \"Popularity graph\",\n       subtitle = \"Top 3 American sitcoms\"\n       ) +\n  scale_color_discrete(name = \"Shows:\",\n                       labels = c(\"South Park\", \"The Simpsons\", \"Family Guy\")) +\n  theme_wsj()  #this theme makes the graph more presentable\n\n\n\n\nThis is a more presentable version of the graph above.\n\nSmooth the data (using a graph) to eliminate random noise. Explain which smoothing method you chose and why.\n\n\nworld_tidy %>% \n  ggplot(aes(x = year, y = score, color = name)) +\n  #geom_line() + #I remove this so we can see the variability of each sitcom.\n  geom_smooth(method = \"loess\") + #This command creates a moving average that smoothes out all the fluctuations.\n  labs(x = \"Year\",\n       y = \"Popularity\",\n       title = \"World Popularity of the main American cartoon sitcoms - Google Trends data\")\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nFor this code we use LOESS command to smooth the fluctuations. LOESS (aka locally weighted smoothing), helps us see the relationship between the three variables and foresee trends. A LOESS smoother takes the data, fits a regression with the subset of data, and uses that linear regression model to get a point for the smoothed curve. The points closer to the fitted line are more impact-full.\n\nCreate a chart to show seasonality by month in your data. What does the chart tell you about the seasonality of your chosen search terms? Some examples of seasonality charts can be found here: https://www.r-graph-gallery.com/142-basic-radar-chart.html (Links to an external site.)\n\n\nworldcoms_tidy %>% \n  group_by(month, name) %>% #I group by month to see which season are popular. By name to see the shows.\n  summarize(mean_score = mean(score)) %>% \n  ggplot(aes(x = month, y = mean_score, fill = name)) +\n  geom_col(position = \"dodge\", alpha = 0) +\n  geom_point() +\n  geom_polygon(alpha = 0.2) + \n  scale_x_continuous(breaks = 1:12, labels =  month.abb[1:12]) + \n  coord_polar()\n\n`summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\n\n\n\n\n\nAs we can see, the Simpsons seasonality graph looks the same. That is probably we have no limits to the popularity score of the variable and every score is close to each other. i.e. popularity does not vary by a lot.\n\nworldcoms_tidy %>% \n  filter(name == \"simpsons\") %>% #I filter by name \"simpsons\" so I can examine the Simpsons show by itself.\n  group_by(month) %>% #I group by month again to see which month is more popular.\n  summarize(mean_score = mean(score)) %>% \n  ggplot(aes(x = month, y = mean_score)) +\n  geom_col(position = \"dodge\", alpha = 0) +\n  geom_point() +\n  geom_polygon(alpha = 0.2) + \n  scale_x_continuous(breaks = 1:12, labels =  month.abb[1:12]) + \n  scale_y_continuous(limits = c(30, 40)) + #I include score limits from 30 to 40 in order to see the exact seasons where \"The simpsons\" peaked and scored low in popularity.\n  coord_polar()\n\nWarning: Removed 12 rows containing missing values (geom_col).\n\n\n\n\n\n\nworldcoms_tidy %>% \n  filter(name == \"famguy\") %>% #I filter by name \"famguy\" so I can examine the \"Family Guy\" show by itself.\n  group_by(month) %>% #I group by month again to see which month is more popular.\n  summarize(mean_score = mean(score)) %>% \n  ggplot(aes(x = month, y = mean_score)) +\n  geom_col(position = \"dodge\", alpha = 0) +\n  geom_point() +\n  geom_polygon(alpha = 0.2) + \n  scale_x_continuous(breaks = 1:12, labels =  month.abb[1:12]) + \n  scale_y_continuous(limits = c(15, 25)) + #I include score limits from 15 to 25 in order to see the exact seasons where \"The Family Guy\" peaked and scored low in popularity.\n  coord_polar()\n\nWarning: Removed 12 rows containing missing values (geom_col)."
  },
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "Resume",
    "section": "",
    "text": "Here is my up-to-date Resume"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Loizos Konstantinou",
    "section": "",
    "text": "Some words I wrote\n\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\n\n\n\nThings to do in Copenhagen\n\n\nJun 9, 2022\n\n\n\n\n\nNo matching items"
  }
]