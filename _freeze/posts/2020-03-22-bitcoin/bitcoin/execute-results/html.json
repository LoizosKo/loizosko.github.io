{
  "hash": "19dd3373f2a7935969cb51c9d1f43dd1",
  "result": {
    "markdown": "---\ntitle: \"Exploring the recent Bitcoin crash with {tidyquant} and {gganimate}\"\nabstract: |\n  Bitcoin recently had a significant sell off, crashing 50% in a matter of hours. This undoubtly was due to the uncertainty in markets surrounding the economic impacts of COVID-19, and the consequent reduction in liquidity faced by many different assets. The volatile price action does however make for an interesting case study which this post will explore.\nauthor: Harry Fisher\ndate: 03-22-2020\npreview: https://media.giphy.com/media/RgxAkfVQWwkjS/giphy.gif\ncategories:\n  - Bitcoin\n  - gganimate\nformat: \n  html:\n    page-layout: article\n    comments:\n      utterances:\n          repo: hfshr/distill_blog\n    \nbibliography: r-references.bib\n---\n\n\n\n# Introduction\n\n[Bitmex](www.bitmex.com) is one of the largest cryptocurrency exchanges where Bitcoin is traded. BitMEX provides a great API that can be used to gather all kinds of data from the site regarding trades and orders, and even allows you to build your own trading bot if you're feeling confident in your programming ability to make a profitable algorithm... However this post will simply collect data from the most recent crash in price and explore what happened using some great R packages including `tidyqaunt` [@R-tidyquant] and `gganimate` [@R-gganimate] as well as the usual suspects in the `tidyverse`.\n\n# Getting the data \n\nTo obtain the necessary data, I first defined a quick function based on the information found on the BitMEX API explorer page (https://www.bitmex.com/api/explorer). \nThis function barely scratches the surface at the possible requests available - but does get the data needed.\n\n::: {.cell}\n\n```{.r .cell-code}\nxbt_reader <- function(symbol = \"XBT\", \n                       timeframe = \"1d\", \n                       count = \"1000\", \n                       starttime = \"\",\n                       reverse = 'false'){\n  \n  base <- \"https://www.bitmex.com/api/v1/trade/bucketed?\"\n  symbol = symbol\n  timeframe = timeframe\n  count = count\n  starttime = starttime\n  \n  url <- paste0(base, \n                'binSize=', timeframe, \n                '&partial=false&symbol=', symbol, \n                '&count=', count, \n                '&reverse=', reverse,\n                '&startTime=', starttime)\n  \n result <- tibble(data = content(GET(url), \"parsed\")) %>%\n    unnest_wider(data)\n}\n```\n:::\n\n\nNext, I used this  function to get the bucketed 5 minute trade data starting from the day before the crash. \n\n::: {.cell}\n\n```{.r .cell-code}\nxbt <- xbt_reader(timeframe = \"5m\", starttime = \"2020-03-11\") %>% \n  mutate(timestamp = as_datetime(timestamp))\n```\n:::\n\n# Visualising the data\n\nThe price action can now be plotted using a combination of `tidyqaunt` and `gganimate`. \n\n::: {.cell .column-page figwidth='20' hash='bitcoin_cache/html/unnamed-chunk-6_21674ec14cf7df6aa2e184ed4074691e'}\n\n```{.r .cell-code}\nxbt %>% \n  mutate(label = \"help\") %>% \n  ggplot(aes(x = timestamp, y = close)) +\n  geom_candlestick(aes(open = open, high = high, low = low, close= close),\n                   fill_up = \"green\",\n                   fill_down = \"red\",\n                   colour_up = \"green\",\n                   colour_down = \"red\") +\n  scale_x_datetime(date_breaks = \"12 hour\", date_labels = \"%H%M\") +\n  scale_y_continuous(labels = scales::dollar) +\n  labs(y = \"Price (USD)\", \n       x = \"Time\")  +\n  transition_time(timestamp) +\n  shadow_mark() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](bitcoin_files/figure-html/unnamed-chunk-6-1.gif)\n:::\n:::\n\nAs can be seen, this was a dramatic sell of with price dropping from almost 8000 USD to the low 3000 USD mark within a matter of hours, before recovery slightly to around the 5000 USD level.\n\n\n# DDoS attack\n\nWhat makes this price action all the more intriguing is the reported DDoS attacks suffered by Bitmex on the 13th March. \nBitmex reported two attacks, taking place at 02:16 UTC and 12:56 UTC. \nThe first attack also happened to coincide with the lowest price during the drop which has caused some suspicion giving the timing of the attacks... However, speculation aside, these attacks can be clearly visualised using the trade data.\n\n\n::: {.column-margin}\nMore information on the DDoS attacks can be found here: [https://blog.bitmex.com/how-we-are-responding-to-last-weeks-ddos-attacks](https://blog.bitmex.com/how-we-are-responding-to-last-weeks-ddos-attacks)\n:::\n\n\nI've adjusted the time interval to the lowest resolution possible (1 minute) to clearly see the effect of the DDoS attacks.\n\n::: {.cell figwidth='20' hash='bitcoin_cache/html/unnamed-chunk-8_0d5209cdbac38cc95b79c19b979f8df5'}\n\n```{.r .cell-code}\nxbt_lower <- xbt_reader(timeframe = \"1m\", starttime = \"2020-03-13\") %>% \n  mutate(timestamp = as_datetime(timestamp)) %>% \n  filter(timestamp > \"2020-03-13 11:30:00\" & timestamp < \"2020-03-13 13:30:00\" |\n        timestamp > \"2020-03-13 01:30:00\" & timestamp < \"2020-03-13 03:30:00\") %>% \n  mutate(ddos = case_when(timestamp > \"2020-03-13 01:30:00\" & timestamp < \"2020-03-13 03:30:00\" ~ \"First attack\",\n                          timestamp > \"2020-03-13 11:30:00\" & timestamp < \"2020-03-13 13:30:00\" ~ \"Second attack\",\n                          )) \n\n\np1 <- xbt_lower %>% \n  ggplot(aes(x = timestamp, y = close)) +\n  geom_candlestick(aes(open = open, high = high, low = low, close= close),\n                   fill_up = \"green\",\n                   fill_down = \"red\",\n                   colour_up = \"green\",\n                   colour_down = \"red\")  +\n  facet_wrap(~ddos, scales = \"free\") +\n  scale_y_continuous(labels = scales::dollar)+\n  labs(x = \"\", y = \"Price (USD)\") +\n  theme_minimal()\n\n\n\np2 <- xbt_lower %>% \n  ggplot(aes(timestamp, volume/1000)) +\n  geom_col() +\n  facet_wrap(~ddos, scales = \"free\") +\n  theme_minimal()  +\n  labs(x = \"Time\", y = \"Volume\") +\n  theme(\n    strip.background = element_blank(),\n    strip.text.x = element_blank()\n  )\n\n\np1 / p2 +\n  plot_annotation(title = \"Price data during the DDoS attacks\")\n```\n\n::: {.cell-output-display}\n![](bitcoin_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nThe effect of each DDoS is clearly visible from the price data, leaving large gaps for approximately 15 minutes where very few to no trades were placed. \nImmediately following each attack was a period of extreme volatility, before price was able to stabilise to some degree.   \n\nThese conditions would have expectationally difficult for many traders, although not all together unpredictable given the highly volatile nature of Bitcoin and the risk that comes with it...!\n\n# Summary\n\nThere are a several other avenues that could be interesting to explore here, such as visualising the order book liquidity during the crash compared to a more \"stable\" period of time, however I may save that for a follow-up post.\nI have also been playing with the Bitmex websocket connection which streams real time data from the exchange - I think a shiny app would be really cool to visualise this so may try something there as well.\n\nThanks for reading!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}