{
  "hash": "b7c17fe8599b2e17f99759ae9eeab116",
  "result": {
    "markdown": "---\ntitle: \"Many models, many plots, many pages!\"\ndescription: |\n  A quick post showing a cool {knitr} trick you can use when creating a pdf with many plots and many pages.\ndate: 01/29/2021\nimage: giphy.gif\n---\n\n\n\n\nI wanted to share a cool `knitr` trick I recently discovered thanks to [this excellent SO post](https://stackoverflow.com/questions/52788015/looping-through-a-list-of-ggplots-and-giving-each-a-figure-caption-using-knitr).\n\n## The problem\n\n* You have some data that has many groups. \n* You want to fit a model and create a plot of the result for each group.\n* You want to create a pdf output that has each plot for each group on a new page, with the correct figure title and list of figures.\n* You _don't_ want to write each code chunk out manually.\n\n## The solution\n\nFor a quick demonstration, lets use the `survival::verteran` dataset. We want to fit a survival model for each `celltype` and use `ggsurvplot` to create a survival curve for each model. Finally we want to print out each of the plots on a new page in a pdf document.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n```\n:::\n\n::: {.cell-output-stderr}\n```\n✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n✓ tibble  3.1.6     ✓ dplyr   1.0.8\n✓ tidyr   1.2.0     ✓ stringr 1.4.0\n✓ readr   2.1.1     ✓ forcats 0.5.1\n```\n:::\n\n::: {.cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(survival)\nlibrary(survminer)\n```\n\n::: {.cell-output-stderr}\n```\nLoading required package: ggpubr\n```\n:::\n\n::: {.cell-output-stderr}\n```\n\nAttaching package: 'survminer'\n```\n:::\n\n::: {.cell-output-stderr}\n```\nThe following object is masked from 'package:survival':\n\n    myeloma\n```\n:::\n\n```{.r .cell-code}\n# fit model for each celltype\n\nby_celltype <- veteran %>% \n  nest_by(celltype) %>% \n  mutate(model = list(survfit(Surv(time, status) ~ trt, data = data)),\n         plot = list(ggsurvplot(model, data = data)),\n         name = str_glue(\"Survival curve by treatmeant for celltype: {celltype}\"))\n```\n:::\n\n\nIf you haven't seen `nest_by` in action before, I'd highly recommend checking out this [dplyr article](https://dplyr.tidyverse.org/articles/rowwise.html#modelling). \n\nNext we extract the list-column `by_celltype$plot` as a list, and give each element the name that was created using `str_glue` in the previous step.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_plots <- as.list(by_celltype$plot)\n\nnames(all_plots) <- by_celltype$name\n\nnames(all_plots)\n```\n\n::: {.cell-output-stdout}\n```\n[1] \"Survival curve by treatmeant for celltype: squamous\" \n[2] \"Survival curve by treatmeant for celltype: smallcell\"\n[3] \"Survival curve by treatmeant for celltype: adeno\"    \n[4] \"Survival curve by treatmeant for celltype: large\"    \n```\n:::\n:::\n\nThese will be used as our figure captions in the pdf.\n\nIn this final step, we can pass in the names of the list to the `fig.cap` option in the knitr chunk, and set `results = 'asis'` like so\n\n````\n```{r fig.cap=names(all_plots), results='asis'}\n```\n\n````\n\nIn that chunk we can use a loop that prints each element in our list (in this case our plots) and also a `\\newpage` command after each plot. \n\n::: {.column-margin}\n\nNote that we need to use two `\\\\` in order escape the single `\\` in markdown.\n\n:::\n\n\n```{.r .cell-code}\nfor(plot in names(all_plots)){\n  print(all_plots[[plot]])\n  cat('\\\\newpage')\n}\n```\n\n\nBelow is an example of the output.\n\n<iframe frameborder=\"0\" scrolling=\"no\"\n     width=\"640\" height=\"480\"\n     src=\"many-plots-demo.pdf\">\n</iframe>\n\nNow, this was only with three groups, so it probably wouldn't have been too much trouble to write out manually. However with 50 or 100 groups, this workflow can come in very handy!\n\n## Acknowledgments {.appendix}\n\nAll thanks goes to [Michael Harper](https://mikeyharper.uk/) for his great answer to this stack overflow post: https://stackoverflow.com/questions/52788015/looping-through-a-list-of-ggplots-and-giving-each-a-figure-caption-using-knitr",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}